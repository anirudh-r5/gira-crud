// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  issues    Issue[]
  project   Project?  @relation(fields: [projectId], references: [id])
  projectId Int?

  @@map("user")
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String
  url         String?
  description String?
  category    ProjectCategory
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  issues      Issue[]
  users       User[]

  @@map("project")
}

model Issue {
  id              Int           @id @default(autoincrement())
  title           String
  type            IssueType
  status          IssueStatus
  priority        IssuePriority
  listPosition    Float
  description     String?
  descriptionText String?
  estimate        Int?
  timeSpent       Int?
  timeRemaining   Int?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  project         Project       @relation(fields: [projectId], references: [id])
  projectId       Int
  comment         Comment[]
  users           User          @relation(fields: [userId], references: [id])
  userId          Int

  @@map("issue")
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Issue     Issue    @relation(fields: [issueId], references: [id])
  issueId   Int

  @@map("comment")
}

enum ProjectCategory {
  SOFTWARE
  MARKETING
  BUSINESS

  @@map("project_category")
}

enum IssueType {
  TASK
  BUG
  STORY

  @@map("issue_type")
}

enum IssueStatus {
  BACKLOG
  SELECTED
  INPROGRESS
  DONE

  @@map("issue_status")
}

enum IssuePriority {
  HIGHEST
  HIGH
  MEDIUM
  LOW
  LOWEST

  @@map("issue_priority")
}
